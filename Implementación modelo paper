n = 1000
nodes = np.zeros(n)
H = np.array([[0.5, 0.34, 0.76], [0.66, 0.5, 0.25], [0.24, 0.75, 0.5]])
r_long = 0.15
r_short = 0.03
t = 500


network_rgg_short = RGG(nodes, r_short)
ecosystem_rgg_short = Ecosystem_A(network_rgg_short, H)
ecosystem_rgg_short.random_init()
nodes_history_rgg_short = ecosystem_rgg_short.evolve(t)

d_rgg_short=nodes_history_rgg_short.shape[0] 
p1_rgg_short=0
p2_rgg_short=0
p3_rgg_short=0
Pob1_rgg_short=[]
Pob2_rgg_short=[]
Pob3_rgg_short=[]
for i in range(0,d_rgg_short):
    haux_rgg_short=nodes_history_rgg_short[i,:]
    for element in haux_rgg_short:
        if element==1:
            p1_rgg_short=p1_rgg_short+1
        if element==2:
            p2_rgg_short=p2_rgg_short+1
        if element==3:
            p3_rgg_short=p3_rgg_short+1
    Pob1_rgg_short.append(p1_rgg_short/n)
    Pob2_rgg_short.append(p2_rgg_short/n)
    Pob3_rgg_short.append(p3_rgg_short/n)
    p1_rgg_short=0
    p2_rgg_short=0
    p3_rgg_short=0
            

T=np.arange(0,d_rgg_short)
plt.plot(T,Pob1_rgg_short,'b', label='Población 1')
plt.plot(T,Pob2_rgg_short,'r', label='Población 2')
plt.plot(T,Pob3_rgg_short,'g', label='Población 3')
plt.title('Short interactions')
plt.xlim(0,t)
plt.ylim(0,1)
plt.legend(fontsize=10)

plt.show()

#Decae la población
for i in range(1,len(Pob1_rgg_short)):
    print(Pob1_rgg_short[i] + Pob2_rgg_short[i] + Pob3_rgg_short[i])
    
    
#Comprobación de remplazamiento de nodos
for i in range(0,d_rgg_short):
    haux_rgg_short=nodes_history_rgg_short[i,:]
    for element in haux_rgg_short:
        if element==0:
            print('En la interacción ', i, 'hay un nodo que no ha sido remplazado')
